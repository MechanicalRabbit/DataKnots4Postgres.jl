var documenterSearchIndex = {"docs":
[{"location":"#DataKnots4Postgres.jl","page":"Home","title":"DataKnots4Postgres.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using LibPQ\n\nconn = LibPQ.Connection(\"\")\n\nexecute(conn, \"BEGIN\")\n\nexecute(conn,\n        \"\"\"\n        CREATE TYPE patient_sex_enum AS ENUM ('male', 'female', 'other', 'unknown');\n\n        CREATE TABLE patient (\n            id int4 NOT NULL,\n            mrn text NOT NULL,\n            sex patient_sex_enum NOT NULL DEFAULT 'unknown',\n            mother_id int4,\n            father_id int4,\n            CONSTRAINT patient_pk PRIMARY KEY (id),\n            CONSTRAINT patient_mrn_uk UNIQUE (mrn),\n            CONSTRAINT patient_mother_fk FOREIGN KEY (mother_id) REFERENCES patient (id),\n            CONSTRAINT patient_father_fk FOREIGN KEY (father_id) REFERENCES patient (id)\n        );\n\n        INSERT INTO patient (id, mrn, sex, mother_id, father_id) VALUES\n            (1001, '99f93d58', 'female', NULL, NULL),\n            (1002, '28ac2156', 'male', NULL, NULL),\n            (1003, 'dc6194b7', 'male', 1001, 1002),\n            (1004, '3126ce41', 'female', 1001, 1002);\n        \"\"\")\n\nusing DataKnots, DataKnots4Postgres\n\ndb = DataKnot(conn)\n#=>\n┼─────────── … ──┼\n│ DATABASE \" … \" │\n=#\n\n@query db patient\n#=>\n  │ patient │\n──┼─────────┼\n1 │ 1001    │\n2 │ 1002    │\n3 │ 1003    │\n4 │ 1004    │\n=#\n\n@query db patient{mrn, sex}\n#=>\n  │ patient          │\n  │ mrn       sex    │\n──┼──────────────────┼\n1 │ 99f93d58  female │\n2 │ 28ac2156  male   │\n3 │ dc6194b7  male   │\n4 │ 3126ce41  female │\n=#\n\n@query db patient.filter(sex==\"female\")\n#=>\n  │ patient │\n──┼─────────┼\n1 │ 1001    │\n2 │ 1004    │\n=#\n\n@query db count(patient)\n#=>\n┼───┼\n│ 4 │\n=#\n\n@query db patient.group(sex){sex, size => count(patient)}\n#=>\n  │ sex     size │\n──┼──────────────┼\n1 │ female     2 │\n2 │ male       2 │\n=#\n\n@query db begin\n    patient\n    keep(p => it)\n    {mrn, sex}\n    join(mother => patient.filter(id == p.mother_id).is0to1())\n    join(father => patient.filter(id == p.father_id).is0to1())\n    {mrn, sex, mother => mother.mrn, father => father.mrn}\nend\n#=>\n  │ patient                              │\n  │ mrn       sex     mother    father   │\n──┼──────────────────────────────────────┼\n1 │ 99f93d58  female                     │\n2 │ 28ac2156  male                       │\n3 │ dc6194b7  male    99f93d58  28ac2156 │\n4 │ 3126ce41  female  99f93d58  28ac2156 │\n=#\n\n@query db begin\n    patient\n    {\n        mrn,\n        mother => patient_mother_fk.mrn,\n        father => patient_father_fk.mrn,\n        maternal_children => patient_via_patient_mother_fk.mrn,\n        paternal_children => patient_via_patient_father_fk.mrn,\n    }\nend\n#=>\n  │ patient                                                           │\n  │ mrn       mother    father    maternal_children  paternal_childre…│\n──┼───────────────────────────────────────────────────────────────────┼\n1 │ 99f93d58                      dc6194b7; 3126ce4…                  │\n2 │ 28ac2156                                         dc6194b7; 3126ce…│\n3 │ dc6194b7  99f93d58  28ac2156                                      │\n4 │ 3126ce41  99f93d58  28ac2156                                      │\n=#","category":"page"}]
}
